{"name": "KAFKA: Сообщение с пользователем публикуется в Kafka после успешной регистрации", "status": "broken", "statusDetails": {"message": "_pytest.fixtures.FixtureLookupError: ('auth_client', <FixtureRequest for <Function test_message_should_be_produced_to_kafka_after_successful_registration>>)", "trace": "file /Users/maksimdenisenkov/niffler-py-st2/niffler-e-2-e-tests-python/tests/kafka/test_kafka.py, line 12\n      @id(\"600001\")\n      @title(\"KAFKA: Сообщение с пользователем публикуется в Kafka после успешной регистрации\")\n      @tag(\"KAFKA\")\n      def test_message_should_be_produced_to_kafka_after_successful_registration(self, auth_client, kafka):\nE       fixture 'auth_client' not found\n>       available fixtures: _session_faker, _verify_url, auth, auth_api_token, auth_credential, auth_db, base_url, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, category, category_db_clean, current_user, doctest_namespace, envs, fake_user, faker, image_to_base64, login_page, main_page, main_page_oauth, monkeypatch, profile_page, profile_page_oauth, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, register_credential, register_page, spend_db, spend_db_clean, spending_page, spends, spends_client, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, user_client\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/Users/maksimdenisenkov/niffler-py-st2/niffler-e-2-e-tests-python/tests/kafka/test_kafka.py:12"}, "start": 1747399804049, "stop": 1747399804049, "uuid": "0fa9e0f7-1633-48f2-8802-41977af54bc5", "historyId": "ba6e81f04af6564f74109f47b42328f4", "testCaseId": "ba6e81f04af6564f74109f47b42328f4", "fullName": "tests.kafka.test_kafka.TestAuthRegistrationKafkaTest#test_message_should_be_produced_to_kafka_after_successful_registration", "labels": [{"name": "suite", "value": "[KAFKA][niffler-auth]: Паблишинг сообщений в кафку"}, {"name": "epic", "value": "[KAFKA][niffler-auth]: Паблишинг сообщений в кафку"}, {"name": "as_id", "value": "600001"}, {"name": "parentSuite", "value": "tests.kafka"}, {"name": "subSuite", "value": "TestAuthRegistrationKafkaTest"}, {"name": "host", "value": "MacBook-Air-Maksim.local"}, {"name": "thread", "value": "3343-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.kafka.test_kafka"}]}